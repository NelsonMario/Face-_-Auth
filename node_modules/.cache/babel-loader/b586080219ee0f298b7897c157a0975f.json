{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\WebProgramming\\\\ErrFace-_-Auth\\\\Face-_-Auth\\\\src\\\\components\\\\OTP.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from '../firebase.js';\nimport Cookies from 'universal-cookie';\nimport styles from '../styles/recaptcha.module.css';\n\nconst storeToken = token => {\n  const cookies = new Cookies();\n  cookies.set('authtoken', token, {\n    path: '/',\n    expires: new Date(Date.now() + 2592000)\n  });\n  console.log(cookies.get('authtoken'));\n};\n\nconst sendOTP = () => {\n  let recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha');\n  let number = '+6285695900268';\n  firebase.auth().signInWithPhoneNumber(number, recaptcha).then(e => {\n    let code = prompt('enter the OTP', '');\n    if (code == null) return;\n    e.confirm(code).then(result => {\n      storeToken(result.user.refreshToken);\n    }).catch(error => {\n      alert(error);\n    });\n  });\n};\n\nconst OTP = props => {\n  useEffect(() => {\n    const cookies = new Cookies();\n    const currentCookie = cookies.get('authtoken');\n    if (currentCookie === undefined) sendOTP();else console.log(cookies.get('authtoken'));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    className: styles.recaptcha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default OTP;","map":{"version":3,"sources":["E:/Project/WebProgramming/ErrFace-_-Auth/Face-_-Auth/src/components/OTP.js"],"names":["React","useState","useEffect","firebase","Cookies","styles","storeToken","token","cookies","set","path","expires","Date","now","console","log","get","sendOTP","recaptcha","auth","RecaptchaVerifier","number","signInWithPhoneNumber","then","e","code","prompt","confirm","result","user","refreshToken","catch","error","alert","OTP","props","currentCookie","undefined","modal","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB,EAAgC;AAACG,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAW,OAApB;AAArB,GAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAZ;AACH,CAJD;;AAMA,MAAMC,OAAO,GAAG,MAAM;AAClB,MAAIC,SAAS,GAAG,IAAIf,QAAQ,CAACgB,IAAT,CAAcC,iBAAlB,CAAoC,WAApC,CAAhB;AACA,MAAIC,MAAM,GAAG,gBAAb;AAEAlB,EAAAA,QAAQ,CAACgB,IAAT,GAAgBG,qBAAhB,CAAsCD,MAAtC,EAA8CH,SAA9C,EAAyDK,IAAzD,CAA+DC,CAAD,IAAO;AAEjE,QAAIC,IAAI,GAAGC,MAAM,CAAC,eAAD,EAAkB,EAAlB,CAAjB;AAEA,QAAGD,IAAI,IAAI,IAAX,EAAiB;AACjBD,IAAAA,CAAC,CAACG,OAAF,CAAUF,IAAV,EAAgBF,IAAhB,CAAsBK,MAAD,IAAY;AAC7BtB,MAAAA,UAAU,CAACsB,MAAM,CAACC,IAAP,CAAYC,YAAb,CAAV;AACH,KAFD,EAEGC,KAFH,CAEUC,KAAD,IAAS;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAJD;AAKH,GAVD;AAWH,CAfD;;AAiBA,MAAME,GAAG,GAAIC,KAAD,IAAW;AAEnBjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,UAAMgC,aAAa,GAAG5B,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAtB;AAEA,QAAGoB,aAAa,KAAKC,SAArB,EACIpB,OAAO,GADX,KAGIH,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAZ;AACP,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAIX,MAAM,CAACiC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACI,IAAZ,CADJ,eAEI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,SAAS,EAAElC,MAAM,CAACa,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAlBD;;AAoBA,eAAegB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport firebase from '../firebase.js'\r\nimport Cookies from 'universal-cookie'\r\nimport styles from '../styles/recaptcha.module.css'\r\n\r\nconst storeToken = (token) => {\r\n    const cookies = new Cookies();\r\n    cookies.set('authtoken', token, {path: '/', expires: new Date(Date.now()+2592000)})\r\n    console.log(cookies.get('authtoken'))\r\n}\r\n\r\nconst sendOTP = () => {\r\n    let recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha')\r\n    let number = '+6285695900268'\r\n\r\n    firebase.auth().signInWithPhoneNumber(number, recaptcha).then((e) => {\r\n\r\n        let code = prompt('enter the OTP', '')\r\n\r\n        if(code == null) return\r\n        e.confirm(code).then((result) => {\r\n            storeToken(result.user.refreshToken)\r\n        }).catch((error)=>{\r\n            alert(error)\r\n        })\r\n    })\r\n}\r\n\r\nconst OTP = (props) => {\r\n\r\n    useEffect(() => {\r\n        const cookies = new Cookies()\r\n        const currentCookie = cookies.get('authtoken')\r\n\r\n        if(currentCookie === undefined)\r\n            sendOTP()\r\n        else\r\n            console.log(cookies.get('authtoken'))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.modal}>\r\n            <div>{props.name}</div>\r\n            <div id=\"recaptcha\" className={styles.recaptcha}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP"]},"metadata":{},"sourceType":"module"}