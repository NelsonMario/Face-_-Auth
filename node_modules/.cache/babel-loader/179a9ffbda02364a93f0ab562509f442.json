{"ast":null,"code":"import React,{useState,useEffect}from'react';import firebase from'../firebase.js';import Cookies from'universal-cookie';import styles from'../styles/recaptcha.module.css';var storeToken=function storeToken(token){var cookies=new Cookies();cookies.set('authtoken',token,{path:'/',expires:new Date(Date.now()+2592000)});console.log(cookies.get('authtoken'));};var sendOTP=function sendOTP(){var recaptcha=new firebase.auth.RecaptchaVerifier('recaptcha');var number='+6285695900268';firebase.auth().signInWithPhoneNumber(number,recaptcha).then(function(e){var code=prompt('enter the OTP','');if(code==null)return;e.confirm(code).then(function(result){storeToken(result.user.refreshToken);}).catch(function(error){alert(error);});});};var OTP=function OTP(props){useEffect(function(){var cookies=new Cookies();var currentCookie=cookies.get('authtoken');if(currentCookie===undefined)sendOTP();else console.log(cookies.get('authtoken'));},[]);return/*#__PURE__*/React.createElement(\"div\",{className:styles.modal},/*#__PURE__*/React.createElement(\"div\",null,props.name),/*#__PURE__*/React.createElement(\"div\",{id:\"recaptcha\",className:styles.recaptcha}));};export default OTP;","map":{"version":3,"sources":["E:/Project/WebProgramming/Face-_-Auth/src/components/OTP.js"],"names":["React","useState","useEffect","firebase","Cookies","styles","storeToken","token","cookies","set","path","expires","Date","now","console","log","get","sendOTP","recaptcha","auth","RecaptchaVerifier","number","signInWithPhoneNumber","then","e","code","prompt","confirm","result","user","refreshToken","catch","error","alert","OTP","props","currentCookie","undefined","modal","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,OAAO,CAAG,GAAIJ,CAAAA,OAAJ,EAAhB,CACAI,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBF,KAAzB,CAAgC,CAACG,IAAI,CAAE,GAAP,CAAYC,OAAO,CAAE,GAAIC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,GAAW,OAApB,CAArB,CAAhC,EACAC,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAZ,EACH,CAJD,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAIC,CAAAA,SAAS,CAAG,GAAIf,CAAAA,QAAQ,CAACgB,IAAT,CAAcC,iBAAlB,CAAoC,WAApC,CAAhB,CACA,GAAIC,CAAAA,MAAM,CAAG,gBAAb,CAEAlB,QAAQ,CAACgB,IAAT,GAAgBG,qBAAhB,CAAsCD,MAAtC,CAA8CH,SAA9C,EAAyDK,IAAzD,CAA8D,SAACC,CAAD,CAAO,CAEjE,GAAIC,CAAAA,IAAI,CAAGC,MAAM,CAAC,eAAD,CAAkB,EAAlB,CAAjB,CAEA,GAAGD,IAAI,EAAI,IAAX,CAAiB,OACjBD,CAAC,CAACG,OAAF,CAAUF,IAAV,EAAgBF,IAAhB,CAAqB,SAACK,MAAD,CAAY,CAC7BtB,UAAU,CAACsB,MAAM,CAACC,IAAP,CAAYC,YAAb,CAAV,CACH,CAFD,EAEGC,KAFH,CAES,SAACC,KAAD,CAAS,CACdC,KAAK,CAACD,KAAD,CAAL,CACH,CAJD,EAKH,CAVD,EAWH,CAfD,CAiBA,GAAME,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,CAEnBjC,SAAS,CAAC,UAAM,CACZ,GAAMM,CAAAA,OAAO,CAAG,GAAIJ,CAAAA,OAAJ,EAAhB,CACA,GAAMgC,CAAAA,aAAa,CAAG5B,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAtB,CAEA,GAAGoB,aAAa,GAAKC,SAArB,CACIpB,OAAO,GADX,IAGIH,CAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,GAAR,CAAY,WAAZ,CAAZ,EACP,CARQ,CAQN,EARM,CAAT,CAUA,mBACI,2BAAK,SAAS,CAAIX,MAAM,CAACiC,KAAzB,eACI,+BAAMH,KAAK,CAACI,IAAZ,CADJ,cAEI,2BAAK,EAAE,CAAC,WAAR,CAAoB,SAAS,CAAElC,MAAM,CAACa,SAAtC,EAFJ,CADJ,CAMH,CAlBD,CAoBA,cAAegB,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport firebase from '../firebase.js'\r\nimport Cookies from 'universal-cookie'\r\nimport styles from '../styles/recaptcha.module.css'\r\n\r\nconst storeToken = (token) => {\r\n    const cookies = new Cookies();\r\n    cookies.set('authtoken', token, {path: '/', expires: new Date(Date.now()+2592000)})\r\n    console.log(cookies.get('authtoken'))\r\n}\r\n\r\nconst sendOTP = () => {\r\n    let recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha')\r\n    let number = '+6285695900268'\r\n\r\n    firebase.auth().signInWithPhoneNumber(number, recaptcha).then((e) => {\r\n\r\n        let code = prompt('enter the OTP', '')\r\n\r\n        if(code == null) return\r\n        e.confirm(code).then((result) => {\r\n            storeToken(result.user.refreshToken)\r\n        }).catch((error)=>{\r\n            alert(error)\r\n        })\r\n    })\r\n}\r\n\r\nconst OTP = (props) => {\r\n\r\n    useEffect(() => {\r\n        const cookies = new Cookies()\r\n        const currentCookie = cookies.get('authtoken')\r\n\r\n        if(currentCookie === undefined)\r\n            sendOTP()\r\n        else\r\n            console.log(cookies.get('authtoken'))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.modal}>\r\n            <div>{props.name}</div>\r\n            <div id=\"recaptcha\" className={styles.recaptcha}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP"]},"metadata":{},"sourceType":"module"}